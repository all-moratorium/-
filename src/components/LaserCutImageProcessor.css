/* LaserCutImageProcessor.css */

/* モーダル関連のスタイル */


/* App container - full screen layout */
.app-container {
  width: 100vw;
  height: 100vh;
  position: relative;
  overflow: hidden;
  background: transparent; /* 背景グラデーションを見えるようにする */
}

/* 既存の.backgroundに以下を追加 */
.background {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 0;
  pointer-events: none;
  overflow: hidden;
  will-change: transform;
  background: linear-gradient(180deg, #0d0d0d,rgb(51, 51, 51));
}

/* 新しく追加するCSS */
.particles {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
}

.particle {
  position: absolute;
  background: white;
  border-radius: 50%;
  opacity: 0.6;
  animation: float 14s infinite linear;
  transform: translateY(calc(100vh + 50px));
}

@keyframes float {
  0% {
    transform: translateY(calc(100vh + 50px)) translateX(0);
    opacity: 0;
  }
  5% {
    opacity: 0.8;
  }
  95% {
    opacity: 0.8;
  }
  100% {
    transform: translateY(-50px) translateX(30px);
    opacity: 0;
  }
}

/* Main layout container - メインレイアウトコンテナ */
.layout-container {
  display: flex; /* これを変えると：メインレイアウト内の要素の並び方が変わります（サイドバーとコンテンツを横に並べる） */
  width: 100%; /* これを変えると：メインレイアウトの幅が変わります */
  height: 100%; /* これを変えると：メインレイアウトの高さが変わります */
  position: relative; /* これを変えると：メインレイアウト内の要素の配置方法が変わります */
  box-sizing: border-box; /* これを変えると：要素のサイズ計算方法が変わります */
  overflow: hidden; /* これを変えると：メインレイアウトがはみ出たときの表示方法が変わります（スクロールバーを非表示） */
  background: transparent; /* 背景グラデーションを見えるようにする */
}

        /* Sidebar */
        .sidebar {
          height: 100vh;
          background-color: #0a0a0a;
          color: #ffffff;
          transition: width 0.3s cubic-bezier(0.4, 0, 0.2, 1);
          will-change: width; /* Added for performance */
          display: flex;
          position: relative;
          z-index: 1001;
          width: 250px;
          padding: 0;
          overflow-y: auto;
          overflow-x: hidden;
          border-right: 1px solid rgba(255, 255, 255, 0.08);
      }

      /* スクロールバー */
      /* ↓↓↓ この下の3つの設定は、もしサイドバーの中身がすごく長くなった時に出てくるスクロール棒のデザインだよ ↓↓↓ */
      /* 今のJSXの作りだと、サイドバーの中身がそんなに長くないかもしれないから、あまり見えないかも */
      .sidebar::-webkit-scrollbar {
          width: 4px;
      }

      .sidebar::-webkit-scrollbar-track {
          background: transparent;
      }

      .sidebar::-webkit-scrollbar-thumb {
          background: rgba(255, 255, 255, 0.1);
          border-radius: 2px;
      }

      .sidebar.collapsed {
          width: 70px;
      }

      /* トグルボタン */
      /* ↓↓↓ この下の「.sidebar-toggle」の設定は、今のJSXだと一部だけが使われているよ ↓↓↓ */
      /* 例えば、背景を透明にしたり、文字の色を変えたり、丸くしたりする部分は使われているけど、 */
      /* SVGアイコン（絵のボタン）に関する細かい設定は、今のJSXが簡単な文字のボタンだから使われていないんだ。 */
      /* もしSVGアイコンを使いたくなったら、このCSSが活躍するよ！ */
      .sidebar-toggle {
          position: absolute;
          right: 24px;
          top: 50%;
          transform: translateY(-50%);
          width: 32px;
          height: 32px;
          background-color: transparent;
          color: rgba(255, 255, 255, 0.6);
          display: flex;
          align-items: center;
          justify-content: center;
          line-height: 0; /* Added to help center special characters */
          border-radius: 8px;
          cursor: pointer;
          z-index: 10;
          font-size: 14px;
          border: 1px solid rgba(255, 255, 255, 0.08);
          transition: all 0.2s ease;
      }

      .sidebar-toggle:hover {
          
          color: #ffffff;
          border-color: rgba(255, 255, 255, 0.2);
      }

      .sidebar.collapsed .sidebar-toggle {
        right: 50%;
        transform: translate(50%, -50%);
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
      }

      .sidebar-toggle:hover {
          background: linear-gradient(135deg, rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0.1));
          color:rgb(250, 250, 250);
          border-color: rgba(255, 255, 255, 0.3);
          transform: translateY(-50%) scale(1.0);
          box-shadow: 0 6px 20px rgba(0, 0, 0, 0.2);
      }

      .sidebar.collapsed .sidebar-toggle {
          right: 50%;
          transform: translate(50%, -50%);
      }

      .sidebar.collapsed .sidebar-toggle:hover {
          transform: translate(50%, -50%) scale(1.05);
      }

      /* サイドバーコンテンツ */
      .sidebar-content {
          display: flex;
          flex-direction: column;
          width: 100%;
          overflow: hidden;
      }

      /* ロゴエリア */
      .logo-container {
        padding: 0 24px;
        height: 80px;
        display: flex;
        align-items: center;
        justify-content: space-between;
        border-bottom: 1px solid rgba(255, 255, 255, 0.08);
        position: relative;
    }


      .logo {
          font-size: 20px;
          font-weight: 600;
          letter-spacing: -0.5px;
          transition: all 0.3s ease;
          white-space: nowrap;
      }

      .sidebar.collapsed .logo {
          opacity: 0;
          transform: translateX(-10px);
          /* ↑↑↑ サイドバーが「collapsed」（ちいさくたたまれた状態）のとき、ロゴを透明にして左にちょっと動かす設定だよ。 */
          /* 今のJSXの「ロゴ」はただの文字だから、この動きはするけど、もっとカッコよくするには、JSX側でロゴの文字を <span class="logo-text"> のように囲むといいかも！ */
      }

      /* ナビゲーション */
      .sidebar-nav {
          display: flex;
          flex-direction: column;
          padding: 18px 0;
      }

      /* ナビゲーション項目 */
      .nav-item {
          margin: 6px 11px;
          padding: 0 12px;
          height: 55px;
          cursor: pointer;
          border: none;
          background: transparent;
          color: rgba(255, 255, 255, 0.6);
          text-align: left;
          font-size: 15px;
          font-weight: 500;
          transition: all 0.2s ease;
          white-space: nowrap;
          overflow: hidden;
          border-radius: 8px;
          position: relative;
          display: flex;
          align-items: center;
          gap: 12px;
      }

      /* アイコン */
      /* ↓↓↓ この「.nav-icon」の設定は、メニュー項目（ホームとか）の横に表示する小さい絵（アイコン）のためのものだよ ↓↓↓ */
      /* 今のJSXのメニューは文字だけだから、この設定は使われていないんだ。 */
      /* もしアイコンを表示したくなったら、JSX側で <span class="nav-icon">絵のコード</span> のように書くと、このCSSが使えるようになるよ！ */
      .nav-icon {
          width: 23px;
          height: 23px;
          min-width: 23px;
          display: flex;
          align-items: center;
          justify-content: center;
          font-size: 16px;
          transition: all 0.2s ease;
      }

      /* SVGアイコンのスタイル */
      /* ↓↓↓ この「.nav-icon svg」の設定は、アイコンがSVGっていう種類の絵だった場合の細かいデザインだよ ↓↓↓ */
      /* 上の「.nav-icon」が使われていないから、これもまだ出番待ちだね。*/
      .nav-icon svg {
          width: 23px;
          height: 23px;
          stroke: currentColor;
          fill: none;
          stroke-width: 1.5;
      }

      /* テキスト */
      /* ↓↓↓ この「.nav-text」の設定は、メニューの文字（「ホーム」とか）のデザインだよ ↓↓↓ */
      /* 今のJSXのメニューは文字が直接書かれているけど、もっと細かくデザインしたくなったら、 */
      /* JSX側で <span class="nav-text">ホーム</span> のように囲むと、このCSSが使えるようになるよ！ */
      .nav-text {
          opacity: 1;
          transition: all 0.3s ease;
      }

      /* ↓↓↓ この「.sidebar.collapsed .nav-text」の設定は、サイドバーがたたまれた時に文字を隠すためのものだよ ↓↓↓ */
      /* 上の「.nav-text」が使われたら、これも一緒に活躍するよ！ */
      .sidebar.collapsed .nav-text {
          opacity: 0;
          width: 0;
      }

      /* ホバー */
      .nav-item:hover {
          background-color: rgba(255, 255, 255, 0.05);
          color: rgba(255, 255, 255, 0.9);
      }

      /* アクティブ */
      .nav-item.active {
          background-color: rgba(255, 255, 255, 0.08);
          color: #ffffff;
      }

      .nav-item.active::before {
          content: '';
          position: absolute;
          left: 0;
          top: 50%;
          transform: translateY(-50%);
          width: 3px;
          height: 20px;
          background-color: #FFFF00;
          border-radius: 0 2px 2px 0;
      }

      /* ツールチップ */
      /* ↓↓↓ この下の「.tooltip」関連の設定は、たたまれたサイドバーのアイコンにマウスを乗せたときに、フワッと説明が出てくる「ツールチップ」のためのものだよ ↓↓↓ */
      /* 今のJSXにはツールチップの仕組みが入っていないから、これらの設定はまだ使われていないんだ。 */
      /* ツールチップを出したくなったら、JSX側で <span class="tooltip">説明の文字</span> のように書くと、このCSSが使えるようになるよ！ */
      .sidebar.collapsed .nav-item {
          position: relative;
      }

      .sidebar.collapsed .nav-item:hover .tooltip {
          opacity: 1;
          transform: translateY(-50%) translateX(0);
          pointer-events: auto;
      }

      .tooltip {
          position: absolute;
          left: 100%;
          top: 50%;
          transform: translateY(-50%) translateX(-8px);
          margin-left: 8px;
          padding: 6px 12px;
          background-color: #1a1a1a;
          color: rgba(255, 255, 255, 0.9);
          border-radius: 6px;
          font-size: 13px;
          white-space: nowrap;
          box-shadow: 0 2px 8px rgba(0, 0, 0, 0.6);
          opacity: 0;
          transition: all 0.2s ease;
          pointer-events: none;
          z-index: 1000;
      }

/* Main content area - メインコンテンツ表示領域 */
.content-area {
  flex: 1; /* これを変えると：コンテンツエリアが使えるスペースの量が変わります（残りのスペースをすべて使用） */
  overflow-y: auto; /* これを変えると：コンテンツが縦に長いときのスクロールの有無が変わります（縦スクロール可能） */
  display: flex; /* これを変えると：コンテンツエリア内の要素の並び方が変わります（フレックスボックスで配置） */
  flex-direction: column; /* これを変えると：コンテンツエリア内の要素が縦に並ぶか横に並ぶかが変わります（上から下に縦に並べる） */
}

/* Page title - ページのメインタイトル */
.page-title {
    font-weight: bold;
    margin: 0 auto;        /* ← padding ではなく margin で中央寄せ */
    text-align: center;
    color: #FFFF00;
    font-size: 50px;
    /* 念のため不要な線を明示的にオフ */
    margin-top: 10px;
    border: none;
    outline: none;
    /* アニメーションの追加 */
    animation: glow-pulse 2s infinite alternate; /* glow-pulseアニメーションを2秒間、無限に、交互に実行 */
}

@keyframes glow-pulse {
    0% {
        text-shadow: 0 0 5px rgba(255, 255, 0, 0.4), /* 軽い光の影 */
                   0 0 10px rgba(255, 255, 0, 0.3);
    }
    100% {
        text-shadow: 0 0 12px rgba(255, 255, 0, 0.7), /* 強い光の影 */
                   0 0 20px rgba(255, 255, 0, 0.5),
                   0 0 25px rgba(255, 255, 0, 0.3);
    }
}


/* Main content layout - メインコンテンツのレイアウト */
.main-content {
  position: relative;
  display: flex; /* これを変えると：メインコンテンツ内の要素の並び方が変わります（フレックスボックスで配置） */
  flex-direction: column; /* これを変えると：メインコンテンツ内の要素が縦に並ぶか横に並ぶかが変わります（上から下に縦に並べる） */
  height: 100%; /* これを変えると：メインコンテンツの高さが変わります（親要素の高さいっぱい） */
  width: 100%; /* これを変えると：メインコンテンツの幅が変わります（親要素の幅いっぱい） */
  overflow-x: hidden; /* これを変えると：メインコンテンツが横に長いときのスクロールの有無が変わります（横スクロールは非表示） */
  align-items: center; /* これを変えると：メインコンテンツ内の要素の横方向の位置が変わります（中央揃え） */
  padding: 0px; /* これを変えると：メインコンテンツの内側の余白が変わります（全周に20pxの余白） */
  gap: 0px; /* これを変えると：メインコンテンツ内の要素間の間隔が変わります（要素間に20pxの間隔） */
  box-sizing: border-box; /* これを変えると：メインコンテンツのサイズ計算方法が変わります（パディングを幅と高さに含める） */
}

/* Preview container for 3D models - 3Dモデルのプレビュー表示領域 */
.preview-container {
  height: 60%; /* これを変えると：プレビューエリアの高さが変わります（390pxの高さ） */
  border: none; /* これを変えると：プレビューエリアの外枚が表示されるようになります（外枚なし） */
  display: flex; /* これを変えると：プレビューエリア内の要素の並び方が変わります（フレックスボックスで配置） */
  width: calc(100% - 70px); /* これを変えると：プレビューエリアの幅が変わります（親要素の幅いっぱい） */
  align-items: center; /* これを変えると：プレビューエリア内の要素の縦方向の位置が変わります（中央揃え） */
  justify-content: center; /* これを変えると：プレビューエリア内の要素の横方向の位置が変わります（中央揃え） */
  background-color: transparent; /* これを変えると：プレビューエリアの背景色が変わります（透明） */
  margin-top: 20px;
  position: fixed;
  bottom: 0%;
  transform: translateY(-50%);
  right: 0%;
  transition: width 0.3s cubic-bezier(0.4, 0, 0.2, 1); /* サイドバーと同期したスムーズな幅変更のためのトランジション */
  will-change: width; /* アニメーションのパフォーマンス向上のために追加 */
}

/* サイドバーが開いている時に .preview-container を右にシフト */
/* LaserCutImageProcessor.jsx で親要素に .sidebar-open-for-preview クラスが付与されることを想定 */
.sidebar-open-for-preview .preview-container {
  width: calc(100% - 250px);
  right: 0%;
  
}

/* プレビューテキスト - プレビュー領域内の説明文 */
.preview-text {
  text-align: center; /* これを変えると：プレビューテキストの文字の位置が変わります（中央揃え） */
  padding: 20px; /* これを変えると：プレビューテキストの内側の余白が変わります（全周に20pxの余白） */
  font-size: 16px; /* これを変えると：プレビューテキストの文字の大きさが変わります（16pxの大きさ） */
  color: rgba(255, 255, 255, 0.7); /* これを変えると：プレビューテキストの文字色が変わります（半透明の白色） */
}

.content-wrapper {
  position: absolute;      /*  ← ここを fixed にすると「画面」に張り付きます */
  left: 50%;
  transform: translateX(-50%);  /* 横中央 */
  bottom: 20px;            /* ← ここで “下からの距離” を決める */
  height:33%;
  /* もとのレイアウト指定はそのまま共存できる */
  display: flex;
  width: 100%;
  align-items: center;
  justify-content: center;
}

.left-column{
  position:absolute;
  left:23%;
  transform: translateX(-50%);
  display:flex;
  flex-direction:column;
  align-items:center;
}


/* 右カラム（説明パネル上部） - レイアウトの右側部分 */
.right-column{
  position: absolute;
  
  
  left:25%;
  top:30%;
  transform: translateX(-50%);
  display:flex;
  flex-direction:column;
  align-items:center;
  text-align:center;
  font-size:19px;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Inter', sans-serif;
  position: relative; /* Added for absolute positioning of child elements */
}
/* 電光石火ボタン */
.info-button {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 50px;
  height: 50px;
  border: 2px solid #ddd;
  border-radius: 50%;
  cursor: pointer;
  position: absolute;
  bottom: 90px;
  left: 50%;
  transform: translateX(-50%);
  font-size: 28px;
  background: white;
  color: #333;
  box-shadow: 0 4px 15px rgba(0,0,0,0.1);
  /* 波紋電光アニメーション */
  animation: lightning-flash 1.5s infinite;
  overflow: visible;
  transition: all 0.3s ease;
}


.info-button:hover {
  transform: translateX(-50%) translateY(-2px);
  box-shadow: 0 6px 20px rgba(0,0,0,0.15);
}

.info-button::before {
  content: 'i';
  font-weight: bold;
  font-style: italic;
  font-family: 'Times New Roman', serif;
  color: #333;
  animation: lightning-flicker 1.5s infinite;
}

.info-button::after {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 100%;
  height: 100%;
  border: 2px solid rgba(255,255,255,0.5);
  border-radius: 50%;
  transform: translate(-50%, -50%) scale(0);
  animation: ripple-wave 1.5s infinite;
}

/* エフェクト停止用 */
.info-button.stopped {
  animation: none;
}

.info-button.stopped::before {
  animation: none;
  text-shadow: 0 0 5px rgba(255,255,255,0.5);
  color: #333;
}

.info-button.stopped::after {
  animation: none;
  opacity: 0;
}

/* アニメーション定義 */
@keyframes lightning-flash {
  0%, 90%, 100% { 
      box-shadow: 0 4px 15px rgba(255,255,255,0.3); 
      border-color: #ffffff; 
  }
  5%, 10% { 
      box-shadow: 0 4px 30px rgba(255,255,255,0.8); 
      border-color: #ffffff; 
      background: #ffffff; 
  }
}

@keyframes lightning-flicker {
  0%, 90%, 100% { 
      text-shadow: 0 0 5px rgba(255,255,255,0.5); 
      color: #333; 
  }
  5%, 10% { 
      text-shadow: 0 0 18px rgba(255,255,255,0.9); 
      color: #ffffff; 
  }
}

@keyframes ripple-wave {
  0% { 
      transform: translate(-50%, -50%) scale(0);
      opacity: 1;
      border-color: rgba(255,255,255,0.7);
  }
  10% { 
      transform: translate(-50%, -50%) scale(1);
      opacity: 0.8;
      border-color: rgba(255,255,255,0.7);
  }
  100% { 
      transform: translate(-50%, -50%) scale(2.5);
      opacity: 0;
      border-color: rgba(255,255,255,0);
  }
}

/* CSS - あなたの既存セレクタに合わせて調整 */
.modal-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.8);
    backdrop-filter: blur(8px);
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 10000;
    animation: fadeIn 0.3s ease-out;
  }
  
  .modal-overlay.show {
    display: flex;
  }
  
  .modal-content {
    background: linear-gradient(145deg, #0a0a0a, #141414);
    border: 1px solid #222;
    border-radius: 16px;
    box-shadow: 0 25px 50px rgba(0, 0, 0, 0.8), 
                0 0 0 1px rgba(255, 255, 255, 0.05);
    margin: 0;
    padding: 40px;
    width: 820px;
    max-height: 90vh;
    overflow-y: auto;
    position: relative;
    animation: slideUp 0.4s cubic-bezier(0.4, 0, 0.2, 1);
  }
  
  .modal-content-inner {
    height: 100%;
    max-height: calc(90vh - 80px);
    overflow-y: auto;
    padding-right: 8px;
    margin-right: -8px;
  }
  
  @keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
  }
  
  @keyframes slideUp {
    from { 
      opacity: 0;
      transform: translateY(40px) scale(0.95);
    }
    to { 
      opacity: 1;
      transform: translateY(0) scale(1);
    }
  }
  
  .modal-content h2 {
    color: #ffffff;
    font-size: 24px;
    font-weight: 600;
    margin-top: 0;
    margin-bottom: 30px;
    text-align: center;
  }
  
  .modal-content .notice-section {
    margin-bottom: 28px;
    padding: 24px;
    background: rgba(255, 255, 255, 0.02);
    border-radius: 12px;
    border-left: 4px solid #00ff80;
    position: relative;
  }
  
  .modal-content .notice-section:last-of-type {
    margin-bottom: 0;
  }
  
  .modal-content .section-title {
    color: #ffffff;
    font-size: 18px;
    font-weight: 600;
    margin-bottom: 16px;
    display: flex;
    align-items: center;
    gap: 12px;
  }
  
  .modal-content .section-icon {
    width: 20px;
    height: 20px;
    background: white;
    border-radius: 4px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 12px;
    color: black;
    font-weight: bold;
  }
  
  .modal-content p {
    color: #c0c0c0;
    font-size: 16px;
    line-height: 1.8;
    margin-bottom: 16px;
    text-align: justify;
    word-break: break-all;
    overflow-wrap: break-word;
  }
  
  .modal-content .copyright-warning {
    background: rgba(255, 107, 53, 0.1);
    border-left-color: #ff3030;
    border: 1px solid rgba(255, 48, 48, 0.2);
  }
  
  .modal-content .copyright-warning .section-icon {
    background: #ff6b35;
    color: white;
  }
  
  .modal-content .copyright-warning .section-title {
    color: #ff6b6b;
  }
  
  .modal-confirm-button {
    color: #000;
    border: none;
    background: linear-gradient(135deg, #00ffff, #00cccc);
    font-size: 16px;
    font-weight: bold;
    cursor: pointer;
    width: 120px;
    height: 45px;
    border-radius: 10px;
    display: block;
    margin: 30px auto 0;
    transition: all 0.2s ease;
    position: relative;
    overflow: hidden;
    z-index: 1001;
    box-sizing: border-box;
  }
  
  .modal-confirm-button:hover {
    background: linear-gradient(135deg, #33ffff, #00dddd);
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(0, 255, 255, 0.3);
  }
  
  /* スクロールバーのカスタマイズ */
  .modal-content-inner::-webkit-scrollbar {
    width: 8px;
  }
  
  .modal-content-inner::-webkit-scrollbar-track {
    background: #1a1a1a;
    border-radius: 4px;
  }
  
  .modal-content-inner::-webkit-scrollbar-thumb {
    background: #333;
    border-radius: 4px;
    border: 1px solid #222;
  }
  
  .modal-content-inner::-webkit-scrollbar-thumb:hover {
    background: #444;
  }
  
  /* Firefox用 */
  .modal-content-inner {
    scrollbar-width: thin;
    scrollbar-color: #333 #1a1a1a;
  }
  
  @media (max-width: 640px) {
    .modal-content {
      width: 95%;
      padding: 24px;
      max-height: 85vh;
    }
    
    .modal-content h2 {
      font-size: 20px;
    }
    
    .modal-content .section-title {
      font-size: 16px;
    }
    
    .modal-content p {
      font-size: 14px;
    }
    
    .modal-confirm-button {
      width: 100px;
      height: 40px;
      font-size: 14px;
    }
  }
/* 下部説明パネル - レイアウト下部の説明文 */


/* 画像プレビュー - アップロードした画像の表示領域 */
.image-preview-bubble {
  width: 250px; /* これを変えると：画像プレビューの幅が変わります（230pxの幅） */
  height: 250px; /* これを変えると：画像プレビューの高さが変わります（230pxの高さ） */
  background-color: rgba(0, 0, 0, 0.7); /* これを変えると：画像プレビューの背景色が変わります（半透明の黒） */
  border: 2px dashed rgba(255, 255, 255, 0.3); /* これを変えると：画像プレビューの外枚の太さと色が変わります（点線の半透明の白） */
  border-radius: 10px; /* これを変えると：画像プレビューの角の丸みが変わります（10pxの角丸） */
  padding: 10px; /* これを変えると：画像プレビューの内側の余白が変わります（全周に10pxの余白） */
  display: flex; /* これを変えると：画像プレビュー内の要素の並び方が変わります（フレックスボックスで配置） */
  align-items: center; /* これを変えると：画像プレビュー内の要素の縦方向の位置が変わります（中央揃え） */
  justify-content: center; /* これを変えると：画像プレビュー内の要素の横方向の位置が変わります（中央揃え） */
  overflow: hidden; /* これを変えると：画像プレビューがはみ出たときの表示方法が変わります（はみ出た部分を非表示） */
  cursor: pointer; /* これを変えると：画像プレビューにマウスを合わせたときのマウスカーソルの形が変わります（クリック可能を示すポインター） */
  transition: all 0.2s ease; /* これを変えると：画像プレビューの変化の速さが変わります（0.2秒の滑らかなアニメーション） */
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.5); /* これを変えると：画像プレビューの影が変わります（黒い影のエフェクト） */
  margin-left:20%;
  border: 2px solid #FFFF00 !important;
  box-shadow: 0 0 10px rgba(255, 255, 0, 0.5);
}

/* 画像プレビュー内の画像 - アップロードした画像自体 */
.image-preview-bubble img {
  max-width: 95%; /* これを変えると：画像プレビュー内の画像の最大幅が変わります（プレビュー領域の95%まで） */
  max-height: 95%; /* これを変えると：画像プレビュー内の画像の最大高さが変わります（プレビュー領域の95%まで） */
  display: block; /* これを変えると：画像プレビュー内の画像の表示方法が変わります（ブロック要素として表示） */
  object-fit: contain; /* これを変えると：画像プレビュー内の画像のサイズ調整方法が変わります（アスペクト比を保ちつつ収める） */
  background-color: transparent; /* これを変えると：画像プレビュー内の画像の背景色が変わります（透明） */
  filter: brightness(1.2); /* これを変えると：画像プレビュー内の画像の明るさが変わります（通常より20%明るく） */
  margin: auto; /* これを変えると：画像プレビュー内の画像の余白が変わります（自動で中央に配置） */
  
}

/* アップロードプレースホルダー - 画像がないときのアップロードエリア */
.upload-placeholder {
  width: 250px; /* これを変えると：画像プレビューの幅が変わります（230pxの幅） */
  height: 250px; /* これを変えると：画像プレビューの高さが変わります（230pxの高さ） */
  background-color: rgba(0, 0, 0, 0.7); /* これを変えると：画像プレビューの背景色が変わります（半透明の黒） */
  border: 2px dashed rgba(255, 255, 255, 0.3); /* これを変えると：画像プレビューの外枚の太さと色が変わります（点線の半透明の白） */
  border-radius: 10px; /* これを変えると：画像プレビューの角の丸みが変わります（10pxの角丸） */
  padding: 10px; /* これを変えると：画像プレビューの内側の余白が変わります（全周に10pxの余白） */
  overflow: hidden; /* これを変えると：画像プレビューがはみ出たときの表示方法が変わります（はみ出た部分を非表示） */
  cursor: pointer; /* これを変えると：画像プレビューにマウスを合わせたときのマウスカーソルの形が変わります（クリック可能を示すポインター） */
  margin-left:20%;
  border: 2px solid #FFFF00 !important;
  box-shadow: 0 0 10px rgba(255, 255, 0, 0.5);
 
}

/* アップロードプレースホルダーのテキスト - 画像アップロードを促す文字 */
.upload-placeholder-text {
  color: white; /* これを変えると：アップロードプレースホルダーのテキストの色が変わります（白色） */
  font-size: 16px; /* これを変えると：アップロードプレースホルダーのテキストの大きさが変わります（16pxの大きさ） */
  text-align: center; /* これを変えると：アップロードプレースホルダーのテキストの位置が変わります（中央揃え） */
  padding: 20px; /* これを変えると：アップロードプレースホルダーのテキストの内側の余白が変わります（全周に20pxの余白） */
  width: 100%; /* これを変えると：アップロードプレースホルダーのテキストの幅が変わります（親要素の幅いっぱい） */
  height: 100%; /* これを変えると：アップロードプレースホルダーのテキストの高さが変わります（親要素の高さいっぱい） */
  display: flex; /* これを変えると：アップロードプレースホルダーのテキストの表示方法が変わります（フレックスボックスで配置） */
  align-items: center; /* これを変えると：アップロードプレースホルダーのテキストの縦方向の位置が変わります（中央揃え） */
  justify-content: center; /* これを変えると：アップロードプレースホルダーのテキストの横方向の位置が変わります（中央揃え） */
}


.center-column{
  position:absolute;
  left:50%;
  transform: translateX(-50%);
  display:flex;
  flex-direction:column;
  align-items:center;
  text-align:center;

}
/* レイヤーセレクタラッパー - レイヤー数選択のコンテナ */
.layer-selector-wrapper {
  width: 100%; /* これを変えると：レイヤーセレクタラッパーの幅が変わります（親要素の幅いっぱい） */
  
}

/* レイヤーセレクタラベル - レイヤー数選択の見出し */
.layer-selector-label {
  color: white; /* これを変えると：レイヤーセレクタラベルの文字色が変わります（白色） */
  font-size: 20px; /* これを変えると：レイヤーセレクタラベルの文字の大きさが変わります（18pxの大きさ） */
  margin-bottom: 30px; /* これを変えると：レイヤーセレクタラベルの下の余白が変わります（下に20pxの余白） */
  text-align: center; /* これを変えると：レイヤーセレクタラベルの文字の位置が変わります（中央揃え） */
  font-weight: normal; /* これを変えると：レイヤーセレクタラベルの文字の太さが変わります（標準の太さ） */
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Inter', sans-serif;
}

/* 数値入力コンテナ - 入力フィールドとボタンをグループ化 */
.number-input-container {
  display: flex;
  align-items: center;
  justify-content: center;
  margin: 0 0 20px;
}

/* 数値入力フィールド - レイヤー数を入力するフィールド */
.number-input {
  width: 100px; /* 数値入力フィールドの幅 */
  height: 60px; /* 数値入力フィールドの高さ */
  text-align: center; /* 文字を中央揃え */
  font-size: 36px; /* 文字の大きさ */
  font-weight: bold; /* 文字の太さ（太字） */
  border: 3px solid #1f1f1f; /* 枠線のスタイルを調整します */
  border-radius: 8px; /* 角の丸みを調整します (8pxの角丸) */
  background-color:rgb(0, 0, 0); /* 背景色を調整します (黒) */
  color:rgb(255, 255, 255); /* 文字色を調整します (白) */
  margin: 0; /* 上下の余白 */
  box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.2); /* 内側の影で奥行きを表現 */
  transition: border-color 0.2s ease-in-out, box-shadow 0.2s ease-in-out; /* スムーズな変化のためのトランジション */
  -moz-appearance: textfield; /* Firefoxでのスピナー非表示 */
  appearance: textfield; /* 標準的なスピナー非表示 */
}

/* 数値ステッパーボタン - プラス/マイナスボタン */
.number-stepper-button {
  width: 40px;
  height: 40px;
  border-radius: 4px;
  border: 1px solid #333;
  background-color: #000;
  color: #fff;
  font-size: 18px;
  font-weight: normal;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: all 0.2s ease;
  margin: 0 7px;
}

.number-stepper-button:hover {
  background-color: #222;
}

.number-stepper-button:active {
  background-color: #333;
  transform: translateY(1px);
}

.number-input::-webkit-outer-spin-button,
.number-input::-webkit-inner-spin-button {
  -webkit-appearance: none; /* Chrome, Safari, Edge, Operaでのスピナー非表示 */
  margin: 0;
}

.number-input:focus {
  outline: none; /* デフォルトのアウトラインを削除 */
  border-color: #FFFF00; /* フォーカス時の枠線の色 (アクセントカラー) */
  background-color:rgb(0, 0, 0); /* フォーカス時の背景色を少し明るく */
  box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.2), 0 0 10px rgba(0, 229, 255, 0.7); /* フォーカス時の影 (アクセントカラーのグロー効果) */
}

/* Process button - レイヤー生成ボタン */
.process-button {
  width: 200px; /* これを変えると：処理ボタンの幅が変わります（200pxの幅） */
  padding: 15px 20px; /* これを変えると：処理ボタンの内側の余白が変わります（上下12px、左右20pxの余白） */
  border: none; /* これを変えると：処理ボタンの外枚が表示されるようになります（外枚なし） */
  border-radius: 5px; /* これを変えると：処理ボタンの形が変わります（角が丸い形状） */
  background: #FFFF00; /* これを変えると：処理ボタンの背景色が変わります（水色） */
  color: #000; /* これを変えると：処理ボタンの文字色が変わります（黒色） */
  cursor: pointer; /* これを変えると：処理ボタンにマウスを合わせたときのマウスカーソルの形が変わります（クリック可能を示すポインター） */
  font-weight: bold; /* これを変えると：処理ボタンの文字の太さが変わります（太字表示） */
  font-size: 19px; /* これを変えると：処理ボタンの文字の大きさが変わります（16pxの大きさ） */
  margin-top: 20px; /* これを変えると：処理ボタンの上の余白が変わります（上に20pxの余白） */
  box-shadow: 0 0 10px rgba(255, 255, 0, 0.5); /* これを変えると：処理ボタンの影が変わります（水色の光るエフェクト） */
  transition: all 0.3s ease; /* これを変えると：処理ボタンの変化の速さが変わります（0.3秒の滑らかなアニメーション） */
  position:absolute;
  bottom : 22%;
  left: 50%;
  transform: translateX(-50%);
}


/* Layer selector */
.layer-selector {
  width: 100%;
  max-width: 200px;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 5px;
  margin: 5px auto 15px;
  box-sizing: border-box;
}


.model-generate-container {
  position: absolute;
  left: 25%;
  bottom: 0px;
  transform: translateX(-50%);
  width: 50%;
  margin-top: 0px;
  height: 42%;
}

.model-generate-button {
  width: 240px; /* サイズ維持 */
  padding: 15px 20px; /* サイズ維持 */
  background-color: #FFFF00; /* .process-button に合わせる */
  border: none;
  border-radius: 5px; /* .process-button に合わせる */
  cursor: pointer;
  font-weight: bold;
  text-align: center;
  color: #000; /* .process-button に合わせる */
  font-size: 23px; /* サイズ維持 */
  letter-spacing: 2px; /* 維持 */
  box-shadow: 0 0 10px rgba(255, 255, 0, 0.5); /* .process-button に合わせる */
  transition: all 0.3s ease; /* .process-button に合わせる */
  position: absolute; /* 配置維持 */
  bottom: 40px; /* 配置維持 */
  left: 50%; /* 配置維持 */
  transform: translateX(-50%); /* 配置維持 */
}

.model-generate-button:hover {
  background-color: #FFFF00; /* .process-button ホバーに合わせる */
  box-shadow: 0 0 20px rgba(255, 255, 0, 0.75); /* .process-button ホバーに合わせる */
  /* transform: translateY(-2px); を削除または統一。ここでは削除して .process-button に合わせる */
  /* ホバー時の位置指定はベースから継承されるため、重複するものは削除 */
}

.model-generate-button.processing {
  background-color: #f0f0f0; /* これを変えると：処理中のボタンの背景色が変わります */
  cursor: wait; /* これを変えると：処理中のボタンにマウスを合わせたときのマウスカーソルの形が変わります */
}

.layer-progress-indicator {
  margin-top: 10px;
  width: 100%;
}

.layer-progress-bar {
  width: 100%;
  height: 8px;
  background-color: rgba(0, 0, 0, 0.3);
  border-radius: 4px;
  overflow: hidden;
}

.layer-progress-fill {
  height: 100%;
  background-color: rgba(0, 238, 255, 0.8);
  transition: width 0.3s ease;
}

.layer-progress-text {
  margin-top: 5px;
  font-size: 12px;
  color: white;
  text-align: center;
}

.control-button {
  width: 100%; /* これを変えると：コントロールボタンの幅が変わります */
  
  background-color: rgba(5, 5, 5, 0); /* これを変えると：コントロールボタンの背景色と透明度が変わります */
  
  
  font-weight: bold; /* これを変えると：コントロールボタンの文字の太さが変わります */
  text-align: center; /* これを変えると：コントロールボタンの文字の位置が変わります */
  color: white; /* これを変えると：コントロールボタンの文字色が変わります */
  display: flex; /* これを変えると：コントロールボタン内の要素の並び方が変わります */
  flex-direction: column; /* これを変えると：コントロールボタン内の要素が縦に並ぶか横に並ぶかが変わります */
  align-items: center; /* これを変えると：コントロールボタン内の要素の横方向の位置が変わります */
  font-size: 14px; /* これを変えると：コントロールボタンの文字の大きさが変わります */
}

.process-button-wrapper {
  width: 100%;
  display: flex;
  justify-content: center;
  margin: 5px auto;
}

.process-button:hover {
  background-color: rgba(255, 255, 0, 1);
  box-shadow: 0 0 20px rgba(255, 255, 0, 0.9);
  
}

.process-button.processing {
  background-color: #f0f0f0; /* これを変えると：処理中のボタンの背景色が変わります */
  cursor: wait; /* これを変えると：処理中のボタンにマウスを合わせたときのマウスカーソルの形が変わります */
}

/* Hidden input */
.hidden-input {
  display: none; /* これを変えると：非表示の入力要素が表示されるようになります */
}

/* Empty preview for placeholder pages */
.empty-preview {
  width: 100%; /* これを変えると：空のプレビューの幅が変わります */
  height: 100%; /* これを変えると：空のプレビューの高さが変わります */
  display: flex; /* これを変えると：空のプレビュー内の要素の並び方が変わります */
  align-items: center; /* これを変えると：空のプレビュー内の要素の縦方向の位置が変わります */
  justify-content: center; /* これを変えると：空のプレビュー内の要素の横方向の位置が変わります */
  background-color: rgba(30, 30, 30, 0.7); /* これを変えると：レイヤー設定パネルの背景色と透明度が変わります */ /* これを変えると：空のプレビューの背景色と透明度が変わります */
  border: 1px solid #ddd; /* これを変えると：空のプレビューの外枠の太さと色が変わります */
  color: white; /* これを変えると：空のプレビュー内の文字色が変わります */
}

/* Layer preview page */
.layer-preview-grid {
  display: grid; /* これを変えると：レイヤープレビューグリッドの表示方法が変わります */
  grid-template-columns: 1fr 1fr; /* これを変えると：レイヤープレビューグリッドの列の数と幅の割合が変わります */
  
 /* これを変えると：レイヤープレビューグリッドの内側の余白が変わります */
  width: 100%; /* これを変えると：レイヤープレビューグリッドの幅が変わります */
  height: 100%; /* これを変えると：レイヤープレビューグリッドの高さが変わります（画面の高さから80pxを引いた値） */
  overflow: hidden; /* これを変えると：レイヤープレビューグリッドがはみ出たときの表示方法が変わります */
}

.left-panel {
  grid-column: 1; /* これを変えると：左パネルが表示される列の位置が変わります */
  display: flex; /* これを変えると：左パネル内の要素の並び方が変わります */
  flex-direction: column; /* これを変えると：左パネル内の要素が縦に並ぶか横に並ぶかが変わります */
  width: 50%;
}

.right-panel {
  grid-column: 2; /* これを変えると：右パネルが表示される列の位置が変わります */
  display: flex; /* これを変えると：右パネル内の要素の並び方が変わります */
  flex-direction: column; /* これを変えると：右パネル内の要素が縦に並ぶか横に並ぶかが変わります */
  gap: 5px; /* これを変えると：右パネル内の要素間の間隔が変わります */
  width: 100%;
}

.original-image-container {
  margin-bottom: 0; /* これを変えると：
  画像コンテナの下の余白が変わります */
  order: 2; /* これを変えると：元の画像コンテナの表示順序が変わります */
}

.layered-image-container {
  order: 1; /* これを変えると：レイヤー画像コンテナの表示順序が変わります */
  margin-bottom: 0; /* これを変えると：レイヤー化された画像コンテナの下の余白が変わります */
}
.layer-title{
  font-weight: bold; /* これを変えると：プレビューアイテムのタイトルの文字の太さが変わります */
  padding: 10px; /* これを変えると：プレビューアイテムのタイトルの内側の余白が変わります */
  text-align: center; /* これを変えると：プレビューアイテムのタイトルの文字の位置が変わります */
  color: white; /* これを変えると：プレビューアイテムのタイトルの文字色が変わります */
  background-color:rgba(0, 0, 0, 0); /* これを変えると：レイヤー設定パネルの背景色と透明度が変わります */ /* これを変えると：プレビューアイテムのタイトルの背景色と透明度が変わります */
  width: 50%;
  position: absolute;
  left: 50%;
  transform: translateX(-50%);  
  top: 0%;
}
.empty-layer-preview{
  position: absolute;
  left: 50%;
  transform: translateX(-50%);  
}

.layer-settings-panel {
  background-color: rgba(0, 0, 0, 0); /* これを変えると：レイヤー設定パネルの背景色と透明度が変わります */
  position: absolute;
  width: 50%;
  left: 25%;
  transform: translateX(-50%);
  top: 0%;
  padding-top: 41px;
  display: flex;
  flex-direction: column;
  color: white;
  height: 63%;
  overflow: hidden;
}

.preview-item {
  background-color: rgba(0, 0, 0, 0); /* これを変えると：レイヤー設定パネルの背景色と透明度が変わります */ /* これを変えると：プレビューアイテムの背景色と透明度が変わります */
  
  display: flex; /* これを変えると：プレビューアイテム内の要素の並び方が変わります */
  flex-direction: column; /* これを変えると：プレビューアイテム内の要素が縦に並ぶか横に並ぶかが変わります */
  overflow: hidden; /* これを変えると：プレビューアイテムがはみ出たときの表示方法が変わります */
  height: calc(50% - 10px); /* これを変えると：プレビューアイテムの高さが変わります（全体の50%から10pxを引いた値） */
}

.preview-item-title {
  font-weight: bold; /* これを変えると：プレビューアイテムのタイトルの文字の太さが変わります */
  padding: 10px; /* これを変えると：プレビューアイテムのタイトルの内側の余白が変わります */
  text-align: center; /* これを変えると：プレビューアイテムのタイトルの文字の位置が変わります */
  color: white; /* これを変えると：プレビューアイテムのタイトルの文字色が変わります */
  background-color:rgba(0, 0, 0, 0); /* これを変えると：レイヤー設定パネルの背景色と透明度が変わります */ /* これを変えると：プレビューアイテムのタイトルの背景色と透明度が変わります */
 
}

.preview-item-content {
  flex: 1; /* これを変えると：プレビューアイテムのコンテンツの高さの割合が変わります */
  position: relative; /* これを変えると：プレビューアイテムのコンテンツ内の要素の配置方法が変わります */
  overflow: hidden; /* これを変えると：プレビューアイテムのコンテンツがはみ出たときの表示方法が変わります */
  background-color: rgba(0, 0, 0, 0); /* これを変えると：レイヤー設定パネルの背景色と透明度が変わります */ /* これを変えると：プレビューアイテムのコンテンツの背景色と透明度が変わります */
}

.preview-item-content > * {
  position: absolute; /* これを変えると：プレビューアイテムのコンテンツ内の要素の配置方法が変わります */
  top: 0; /* これを変えると：プレビューアイテムのコンテンツ内の要素の上端の位置が変わります */
  left: 0; /* これを変えると：プレビューアイテムのコンテンツ内の要素の左端の位置が変わります */
  width: 100%; /* これを変えると：プレビューアイテムのコンテンツ内の要素の幅が変わります */
  height: 100%; /* これを変えると：プレビューアイテムのコンテンツ内の要素の高さが変わります */
  display: flex; /* これを変えると：プレビューアイテムのコンテンツ内の要素の並び方が変わります */
  align-items: center; /* これを変えると：プレビューアイテムのコンテンツ内の要素の縦方向の位置が変わります */
  justify-content: center; /* これを変えると：プレビューアイテムのコンテンツ内の要素の横方向の位置が変わります */
  padding: 10px; /* これを変えると：プレビューアイテムのコンテンツ内の要素の内側の余白が変わります */
  color: white; /* これを変えると：プレビューアイテムのコンテンツ内の文字色が変わります */
}

.preview-item-content img {
  max-width: 100%; /* これを変えると：レイヤープレビュー画像の最大幅が変わります */ /* これを変えると：プレビューアイテムのコンテンツ内の画像の最大幅が変わります */
  max-height: 100%; /* これを変えると：レイヤープレビュー画像の最大高さが変わります */ /* これを変えると：プレビューアイテムのコンテンツ内の画像の最大高さが変わります */
  object-fit: contain;
}

.empty-layer-preview {
  color: white; /* これを変えると：空のレイヤープレビューの文字色が変わります */
  text-align: center; /* これを変えると：空のレイヤープレビューの文字の位置が変わります */
}

.layer-item:hover {
  transform: translateY(-2px);
  /* これを変えると：マウスを合わせたときのレイヤー項目の移動量が変わります */
}

.layer-item.selected {
  border: 2px solid #fff; /* これを変えると：選択されたレイヤー項目の外枠の太さと色が変わります */
   /* これを変えると：選択されたレイヤー項目の拡大率が変わります */
   
}

/* レイヤープレビュー */
.layer-preview {
  border: 1px solid #e5e7eb; /* これを変えると：レイヤープレビューの外枠の太さと色が変わります */
  padding: 8px; /* これを変えると：レイヤープレビューの内側の余白が変わります */
  height: 00px; /* これを変えると：レイヤープレビューの高さが変わります */
  display: flex; /* これを変えると：レイヤープレビュー内の要素の並び方が変わります */
  align-items: center; /* これを変えると：レイヤープレビュー内の要素の縦方向の位置が変わります */
  justify-content: center; /* これを変えると：レイヤープレビュー内の要素の横方向の位置が変わります */
  background-color: #f9fafb; /* これを変えると：レイヤープレビューの背景色が変わります */
  margin-bottom: 16px; /* これを変えると：レイヤープレビューの下の余白が変わります */
  border-radius: 4px; /* これを変えると：レイヤープレビューの角の丸みが変わります */
}

.layer-preview-image {
  max-width: 98%;   /* コンテナの幅の95%を最大幅とする */
  max-height: 98%;  /* コンテナの高さの95%を最大高とする */
  object-fit: contain; /* アスペクト比を保ったまま、コンテナに収まるように調整 */
}

.layer-preview-container {
    height: 90%;
    width: 99%;
    display: flex; /* 画像を中央に配置するため */
    align-items: center; /* 画像を中央に配置するため */
    justify-content: center; /* 画像を中央に配置するため */
    /* 画像の周りに余白が必要な場合は、ここに padding を設定します */
    /* 例: padding: 10px; */
}


/* 設定タイトル */
.settings-title {
  font-weight: 600; /* これを変えると：設定タイトルの文字の太さが変わります */
  margin-bottom: 12px; /* これを変えると：設定タイトルの下の余白が変わります */
}

/* 色設定 */
.color-settings {
  display: flex; /* これを変えると：色設定内の要素の並び方が変わります */
  flex-direction: column; /* これを変えると：色設定内の要素が縦に並ぶか横に並ぶかが変わります */
  align-items: flex-start; /* これを変えると：色設定内の要素の横方向の位置が変わります */
  margin-bottom: 12px; /* これを変えると：色設定の下の余白が変わります */
}

@media (min-width: 768px) {
  .color-settings {
    flex-direction: row; /* これを変えると：画面幅が768px以上のときの色設定内の要素が縦に並ぶか横に並ぶかが変わります */
    align-items: center; /* これを変えると：画面幅が768px以上のときの色設定内の要素の縦方向の位置が変わります */
  }
}

/* レイヤーラベル */
.layer-label {
  white-space: nowrap; /* これを変えると：レイヤーラベルの文字が改行されるかどうかが変わります */
  margin-right: 16px; /* これを変えると：レイヤーラベルの右側の余白が変わります */
  font-weight: 500; /* これを変えると：レイヤーラベルの文字の太さが変わります */
}


.color-picker-large {
  width: 120px;
  height: 50px;
  box-sizing: border-box;
  background:rgb(255, 255, 255);
  margin: 0;
  cursor: pointer;
}

@media (min-width: 768px) {
  .color-picker {
    width: 48px; /* これを変えると：画面幅が768px以上のときのカラーピッカーの幅が変わります */
    margin-bottom: 0; /* これを変えると：画面幅が768px以上のときのカラーピッカーの下の余白が変わります */
    margin-right: 16px; /* これを変えると：画面幅が768px以上のときのカラーピッカーの右側の余白が変わります */
  }
}




@media (min-width: 768px) {
  .apply-color-button {
    margin-bottom: 0; /* これを変えると：画面幅が768px以上のときの色適用ボタンの下の余白が変わります */
    margin-right: 16px; /* これを変えると：画面幅が768px以上のときの色適用ボタンの右側の余白が変わります */
  }
}




/* 色のHEXコード */
.color-hex {
  font-size: 14px; /* これを変えると：色のHEXコードの文字の大きさが変わります */
  font-family: monospace; /* これを変えると：色のHEXコードのフォントの種類が変わります */
}

/* カバレッジ情報 */
.coverage-info {
  margin-top: 5px; /* これを変えると：カバレッジ情報の上の余白が変わります */
  font-size: 14px; /* これを変えると：カバレッジ情報の文字の大きさが変わります */
  color: white; /* これを変えると：カバレッジ情報の文字色が変わります */
}

/* レイヤー設定の新しいスタイル */
.layer-setting-title {
  text-align: center;
  font-weight: bold;
  font-size: 19px;
  color: white;
  padding: 0;
  position: absolute;
  left: 50%;
  transform: translateX(-50%);
  top: 13px;
 
}

.explanation-for-layer{
  width: 97%;
  position: absolute;
  bottom: 67%;
  left: 50%;
  transform: translateX(-50%);
  font-size: 14px;
  white-space: pre;  
}

.layer-setting-content {
  width: 70%;
  min-width: 480px;
  height: 46%;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: flex-end;
  position: absolute;
  bottom: 32%;
  left: 50%;
  transform: translateX(-50%);
  box-sizing: border-box;
  overflow: hidden;
  background-color: rgba(10, 10, 10, 0.77);
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Inter', sans-serif;
  border-radius: 12px;
}

.layer-info {
  
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  font-size: 0.98em;
  gap: 15px;
  margin-left: 10%;
  height: 100%;
}

.layer-number {
  font-weight: bold;
  font-size: 16px;
}





.color-selector-container {
  width: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100%;
  gap: 10px;
  position: absolute;
  left: 50%;
  transform: translateX(-50%);
  bottom: -23px;
}

.color-buttons {
  flex: 0 0 110px;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: 10px;
  margin: 0 0 0 8px;
  width:33%;
  height: 100%;
  padding-right: 10%;
  position: relative;
}

.bg-toggle-btn {
  width: 40px;
  height: 40px;
  font-size: 0.7em;
  border-radius: 0;
  border: 1px solid #333;
  margin: 0;
  padding: 0;
  font-weight: bold;
  transition: background-color 0.3s;
  cursor: pointer;
  background-color: rgba(128, 128, 128, 0.25);
  color: white;
  display: flex;
  align-items: center;
  justify-content: center;
  flex-shrink: 0;
}

.reset-color-button, .apply-color-button ,.merge-color-button{
  min-width: 88px;
  font-size: 0.98em;
  border-radius: 10px;
  border: 2px solid #000;
  margin: 0;
  padding: 6px 0;
  font-weight: bold;
  transition: background-color 0.3s;
  cursor: pointer;
}
.merge-color-button{
  min-width: 88px;
  font-size: 0.75em;
  border-radius: 10px;
  border: 2px solid #000;
  margin: 0;
  padding: auto;
  font-weight: bold;
  transition: background-color 0.3s;
  cursor: pointer;
  height: 38.4px;
}
.merge-mode-controls {
  display: flex;
  flex-direction: column;
  gap: 10px;
  align-items: center;
}

.merge-instructions {
  font-size: 0.9em;
  width: 150%;
  color: #00ffff;
  text-align: center;
  font-weight: bold;
}

/* キャンセルボタンのスタイル */
.cancel-merge-button {
  min-width: 88px;
  color:#fff;
  font-size: 0.75em;
  border-radius: 10px;
  border: 2px solid #000;
  margin: 0;
  padding: auto;
  font-weight: bold;
  transition: background-color 0.3s;
  cursor: pointer;
  height: 38.4px;
  background-color: #f44336;
}

.cancel-merge-button:hover {
  background-color: #d32f2f;
}

.reset-color-button {
  background-color: #f44336;
  color: white;
}
.merge-color-button{
  background-color:rgb(41, 197, 214);
  color: white;
}
.merge-color-button:hover {
  background-color:rgb(68, 178, 190);
}
.apply-color-button {
  background-color: #4CAF50;
  color: white;
}

.reset-color-button:hover {
  background-color: #d32f2f;
}

.apply-color-button:hover {
  background-color: #388e3c;
}

/* ドラッグ中の元のアイテムのスタイル */
.layer-item.dragging-source {
  opacity: 0.4;
  transform: scale(1.05); 
  border-style: dashed;
}

/* ドロップターゲットのハイライトスタイル */
.layer-item.drop-target-highlight {
  background-color: rgba(255, 255, 255, 0.2);
  border-color:rgb(248, 248, 248);
  border-style: solid; /* 強調表示 */
}

/* ドラッグゴーストのスタイル (JavaScript側でも設定してあるが、念のため) */
.dragging-ghost {
  background-color: rgba(50, 50, 50, 0.8); /* JavaScriptで設定した背景色と合わせるか、ここで上書き */
  color: white;
  padding: 10px;
  border-radius: 4px;
  box-shadow: 0 4px 8px rgba(0,0,0,0.3);
  /* JavaScriptで opacity: 0.7, pointerEvents: 'none' などが設定されている */
}
* {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}
img {
  -webkit-user-drag: none;
  user-drag: none;
  /* 各ブラウザ対応 */
}
svg {
  -webkit-user-drag: none;
  user-drag: none;
}
canvas {
  width:100%;
  height:100%;
  -webkit-user-drag: none;
  user-drag: none;
  
  
}

@media (max-width: 1750px) and (min-width: 1025px) {
  
}


/* スマートフォン向けのスタイル */
@media (max-width: 767px) {
  /* ここにスマートフォン向けのスタイルを記述します */
}

/* タブレット向けのスタイル */
@media (min-width: 768px) and (max-width: 1024px) {
  /* ここにタブレット向けのスタイルを記述します */
}

/* レイヤーコンテナ */
.layers-container {
  display: flex;
  position: absolute;
  width: 88%;
  left: 50%;
  overflow-x: hidden;
  border-radius: 10px;
  transform: translateX(-50%);
  flex-wrap: wrap;
  gap: 10px;
  padding-top: 0px;
  padding-bottom: 0px;
  padding-left: 0px;
  padding-right: 10px;
  overflow-y: auto;
  bottom: 82%;
  background-color: rgb(14, 14, 14);
  border: 1px solid #000;
  border-radius: 10px;
  min-height: 75px;
  max-height: 75px;
  box-sizing: border-box;
  
  /* Firefox用 */
  scrollbar-width: thin;
  scrollbar-color: #fff #1a1a1a;
}

.layers-container::-webkit-scrollbar {
  width: 8px;
}

.layers-container::-webkit-scrollbar-track {
  background: #1a1a1a;
  border-radius: 4px;
}

.layers-container::-webkit-scrollbar-thumb {
  background: #fff;
  border-radius: 4px;
  border: 1px solid #222;
}

.layers-container::-webkit-scrollbar-thumb:hover {
  background: #ddd;
}

/* レイヤーアイテム - ドラッグ可能な各レイヤーの表示 */
.layer-item {
  padding-top: 16px;
  margin-top: 9px;
  margin-left: 10px;
  margin-right: -10px;
  height: 54px;
  border: 1px solid #ccc;
  border-radius: 5px;
  cursor: grab;
  text-align: center;
  color: white;
  background-color: #f9f9f9; /* Default background, will be overridden by layer.color */
  transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
  width: 83px;
  box-sizing: border-box; /* Include padding and border in the element's total width and height */
  user-select: none; /* Prevent text selection during drag */
  font-size:0.9rem;
  
}

.layer-item.dragging-source {
  opacity: 0.5;
  border-style: dashed;
}

.layer-item.drop-target-highlight {
  background-color: rgba(255, 255, 255, 0.2);
  border-color:rgb(248, 248, 248);
  border-style: solid;
  transform: translateY(-2px);
  scale: 1.05;
}

.layer-item:hover {
  transform: translateY(-2px); /* これを変えると：マウスを合わせたときのレイヤー項目の移動量が変わります */
  scale: 1.05;
}

.info-button2 {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 24px;
    height: 24px;
    border: 2px solid #ddd;
    border-radius: 50%;
    cursor: pointer;
    position: absolute; /* 配置維持 */
    top: 16.7px; /* 配置維持 */
    left: calc(50% + 81px);
 /* 配置維持 */
    transform: translateX(-50%); /* 配置維持 */
    font-size: 28px;
    background: white;
    color: #333;
    box-shadow: 0 4px 15px rgba(0,0,0,0.1);
    /* 波紋電光アニメーション */
    
    animation: lightning-flash 1.5s infinite;
    overflow: visible;
    transition: all 0.3s ease;
    z-index: 1000;
  }

  
  .info-button2:hover {
    transform: translateX(-50%) translateY(-2px);
    box-shadow: 0 6px 20px rgba(0,0,0,0.15);
    
    
  }
  
  .info-button2::before {
    content: 'i';
    font-size: 18px;
    font-weight: bold;
    font-style: italic;
    font-family: 'Times New Roman', serif;
    color: #333;
    animation: lightning-flicker 1.5s infinite;
  }
  
  .info-button2::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 100%; /* ボタンと同じ幅 */
    height: 100%; /* ボタンと同じ高さ */
    border: 2px solid rgba(255,255,255,0.5);
    border-radius: 50%;
    transform: translate(-50%, -50%) scale(0);
    animation: ripple-wave 1.5s infinite;
  }
  
  /* エフェクト停止用 */
  .info-button2.stopped {
    animation: none;
  }
  
  .info-button2.stopped::before {
    animation: none;
    text-shadow: 0 0 5px rgba(255,255,255,0.5);
    color: #333;
  }
  
  .info-button2.stopped::after {
    animation: none;
    opacity: 0;
  }
  
  /* アニメーション定義 */
  @keyframes lightning-flash {
    0%, 90%, 100% { 
        box-shadow: 0 4px 15px rgba(255,255,255,0.3); 
        border-color: #ffffff; 
    }
    5%, 10% { 
        box-shadow: 0 4px 30px rgba(255,255,255,0.8); 
        border-color: #ffffff; 
        background: #ffffff; 
    }
  }
  
  @keyframes lightning-flicker {
    0%, 90%, 100% { 
        text-shadow: 0 0 5px rgba(255,255,255,0.5); 
        color: #333; 
    }
    5%, 10% { 
        text-shadow: 0 0 18px rgba(255,255,255,0.9); 
        color: #ffffff; 
    }
  }
  
  @keyframes ripple-wave {
    0% { 
        transform: translate(-50%, -50%) scale(0);
        opacity: 1;
        border-color: rgba(255,255,255,0.7);
    }
    10% { 
        transform: translate(-50%, -50%) scale(1);
        opacity: 0.8;
        border-color: rgba(255,255,255,0.7);
    }
    100% { 
        transform: translate(-50%, -50%) scale(2.5);
        opacity: 0;
        border-color: rgba(255,255,255,0);
    }
  }

  /* CSS - レイヤー設定ガイドモーダル (modal-overlay2, modal-content2用) */

/* CSS - レイヤー設定ガイドモーダル (modal-overlay2, modal-content2用) */
.modal-overlay2 {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.8);
    backdrop-filter: blur(8px);
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 10000;
    animation: fadeIn 0.3s ease-out;
  }
  
  .modal-content2 {
    background: linear-gradient(145deg, #0a0a0a, #141414);
    border: 1px solid #222;
    border-radius: 16px;
    box-shadow: 0 25px 50px rgba(0, 0, 0, 0.8), 
                0 0 0 1px rgba(255, 255, 255, 0.05);
    margin: 0;
    padding: 40px;
    width: 820px;
    max-width: 95vw;
    max-height: 90vh;
    overflow: hidden;
    position: relative;
    animation: slideUp 0.4s cubic-bezier(0.4, 0, 0.2, 1);
  }
  
  .modal-content2-inner {
    height: 100%;
    max-height: calc(90vh - 80px);
    overflow-y: auto;
    padding-right: 8px;
    margin-right: -8px;
  }
  
  @keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
  }
  
  @keyframes slideUp {
    from { 
      opacity: 0;
      transform: translateY(40px) scale(0.95);
    }
    to { 
      opacity: 1;
      transform: translateY(0) scale(1);
    }
  }
  
  .modal-content2 h2 {
    color: #ffffff;
    font-size: 20px;
    font-weight: 600;
    margin-top: 0;
    margin-bottom: 30px;
    text-align: center;
  }
  
  .modal-content2 .video-container {
    margin-bottom: 28px;
    text-align: center;
  }
  
  .modal-content2 .video-container video {
    width: 100%;
    height: auto;
    border-radius: 8px;
  }
  
  .modal-content2 .notice-section {
    margin-bottom: 28px;
    padding: 24px;
    background: rgba(255, 255, 255, 0.02);
    border-radius: 12px;
    border-left: 4px solid #00ff80;
    position: relative;
  }
  
  .modal-content2 .notice-section:last-of-type {
    margin-bottom: 0;
  }
  
  .modal-content2 .section-title {
    color: #ffffff;
    font-size: 18px;
    font-weight: 600;
    margin-bottom: 16px;
    display: flex;
    align-items: center;
    gap: 12px;
  }
  
  .modal-content2 .section-icon {
    width: 20px;
    height: 20px;
    background: white;
    border-radius: 4px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 12px;
    color: black;
    font-weight: bold;
  }
  
  .modal-content2 p {
    color: #c0c0c0;
    font-size: 16px;
    line-height: 1.8;
    margin-bottom: 16px;
    text-align: justify;
    word-break: break-all;
    overflow-wrap: break-word;
  }
  
  .modal-confirm-button2 {
    color: #000;
    border: none;
    background: linear-gradient(135deg, #00ffff, #00cccc);
    font-size: 16px;
    font-weight: bold;
    cursor: pointer;
    width: 120px;
    height: 45px;
    border-radius: 10px;
    display: block;
    margin: 30px auto 0;
    transition: all 0.2s ease;
    position: relative;
    overflow: hidden;
  }
  
  .modal-confirm-button2:hover {
    background: linear-gradient(135deg, #33ffff, #00dddd);
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(0, 255, 255, 0.3);
  }
  
  /* スクロールバーのカスタマイズ */
  .modal-content2-inner::-webkit-scrollbar {
    width: 8px;
  }
  
  .modal-content2-inner::-webkit-scrollbar-track {
    background: #1a1a1a;
    border-radius: 4px;
  }
  
  .modal-content2-inner::-webkit-scrollbar-thumb {
    background: #333;
    border-radius: 4px;
    border: 1px solid #222;
  }
  
  .modal-content2-inner::-webkit-scrollbar-thumb:hover {
    background: #444;
  }
  
  /* Firefox用 */
  .modal-content2-inner {
    scrollbar-width: thin;
    scrollbar-color: #333 #1a1a1a;
  }
  
  @media (max-width: 640px) {
    .modal-content2 {
      width: 95%;
      padding: 24px;
      max-height: 85vh;
    }
    
    .modal-content2 h2 {
      font-size: 20px;
    }
    
    .modal-content2 .section-title {
      font-size: 16px;
    }
    
    .modal-content2 p {
      font-size: 14px;
    }
    
    .modal-confirm-button2 {
      width: 100px;
      height: 40px;
      font-size: 14px;
    }
  }
  /* 商品情報ページ専用CSS */
/* 商品情報ページ専用CSS */
/* 商品情報ページ専用CSS */
.product-info-container {
  width: 80%;
  margin: 0 auto;
  padding: 20px;
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  color: #ffffff;
  line-height: 1.6;
}

.product-header {
  text-align: center;
  margin-bottom: 40px;
  
}

.product-header h1 {
  font-size: 2.5rem;
  margin-bottom: 10px;
  color: #ffff00;
}

.product-header p {
  font-size: 1.1rem;
  color: #cccccc;
  max-width: 600px;
  margin: 0 auto;
}

.product-estimate-container {
  display: grid;
  grid-template-columns: 1fr auto;
  gap: 40px;
  margin-bottom: 40px;
}

.product-form-section {
  background: linear-gradient(145deg, #1a1a1a, #262626);
  border-radius: 20px;
  padding: 30px;
  border: 1px solid #333;
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.5);
}

.form-group {
  margin-bottom: 25px;
  
}
.info-input {

  padding: 12px 16px;
  background: #0f0f0f;
  border: 2px solid #333;
  border-radius: 10px;
  color: #ffffff;
  font-size: 1rem;
  transition: all 0.3s ease;
}

.form-group label {
  display: block;
  margin-bottom: 8px;
  font-weight: 600;
  color: #ffffff;
  font-size: 0.95rem;
}

.form-group select,
.form-group input {
  width: 100%;
  padding: 12px 16px;
  background: #0f0f0f;
  border: 2px solid #333;
  border-radius: 10px;
  color: #ffffff;
  font-size: 1rem;
  transition: all 0.3s ease;
}

.form-group select:focus,
.form-group input:focus,
.quantity-display:focus {
  outline: none;
  border-color: #ffff00;
  box-shadow: 0 0 0 3px rgba(255, 255, 0, 0.1);
}

.form-group textarea {
  width: 100%;
  padding: 12px 16px;
  background: #0f0f0f;
  border: 2px solid #333;
  border-radius: 10px;
  color: #ffffff;
  font-size: 1rem;
  transition: all 0.3s ease;
  resize: vertical;
  min-height: 80px;
  font-family: inherit;
  box-sizing: border-box;
}

/* Custom Number Input Styles (Replaced to match .number-input look) */
.custom-number-input-wrapper {
  display: flex;
  align-items: center;
  justify-content: center;
  /* margin: 0 0 20px; /* Contextual margin, .form-group might handle this */
}

.quantity-display {
  width: 100px;
  height: 60px;
  text-align: center;
  font-size: 36px;
  font-weight: bold;
  border: 3px solid #1f1f1f;
  border-radius: 8px;
  background-color: rgb(0, 0, 0);
  color: rgb(255, 255, 255);
  margin: 0; /* Crucial for spacing with new button margins */
  box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.2);
  transition: border-color 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
  -moz-appearance: textfield;
  appearance: textfield;
}

.quantity-display::-webkit-outer-spin-button,
.quantity-display::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

.quantity-display:focus {
  outline: none;
  border-color: #FFFF00;
  background-color: rgb(0, 0, 0);
  box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.2), 0 0 10px rgba(0, 229, 255, 0.7);
}

.quantity-modifier {
  width: 40px;
  height: 40px;
  border-radius: 4px;
  border: 1px solid #333;
  background-color: #000;
  color: #fff;
  font-size: 18px;
  font-weight: normal;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: all 0.2s ease;
  margin: 0 7px; /* This creates space around the input field */
}

.quantity-modifier:hover {
  background-color: #333300;
  border-color: #ffff00;
}

.quantity-modifier:active {
  background-color: #555500;
  transform: translateY(1px);
}

/* Override general .info-input styles for the quantity-display if they conflict */
.info-input.quantity-display {
  padding: 0; /* Reset padding if .info-input adds its own */
  /* Ensure other .info-input styles don't break this specific layout */
}

.form-group textarea:focus {
  outline: none;
  border-color: #ffff00;
  box-shadow: 0 0 0 3px rgba(255, 255, 0, 0.1);
}

.form-group textarea::placeholder {
  color: #666;
}

.product-container-vertical {
  background: linear-gradient(145deg, #0a0a0a, #141414);
  border: 2px solid #333;
  border-radius: 15px;
  padding: 25px;
  margin-bottom: 25px;
}

.product-image {
  text-align: center;
  margin-bottom: 25px;
  width: 70%;
  height: auto;
}

.image-caption {
  margin-top: 10px;
  font-size: 0.9rem;
  color: #999;
}

.product-specs-list {
  margin-bottom: 25px;
  max-width: 600px;
  margin: 0 auto;
}

.spec-item-row {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 18px 20px;
  background: transparent;
  border-bottom: 1px solid #333;
  margin-bottom: 0;
}

.spec-item-row:last-child {
  border-bottom: none;
}

.spec-item-row .spec-label {
  color: #cccccc;
  font-weight: 500;
  font-size: 1rem;
}

.spec-item-row .spec-value {
  color: #ffffff;
  font-weight: bold;
  font-size: 1.1rem;
  text-align: left;
  margin-left: auto;
  padding-left: 20px;
}

.delivery-info {
  background: linear-gradient(145deg, #0a0a0a, #141414);
  border: 1px solid #333;
  border-radius: 10px;
  padding: 20px;
  max-width: 700px;
  margin: 0 auto;
}

.delivery-info h4 {
  color: #ffff00;
  margin-bottom: 15px;
  font-size: 1.1rem;
}

.timeline-item {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 8px 0;
  border-bottom: 1px solid rgba(255, 255, 255, 0.1);
}

.timeline-item:last-child {
  border-bottom: none;
}

.timeline-item.total-time {
  margin-top: 10px;
  padding-top: 15px;
  border-top: 2px solid #ffffff;
  font-weight: bold;
}

.timeline-step {
  color: #cccccc;
}

.timeline-time {
  color: #ffffff;
  font-weight: bold;
  text-align: left;
  margin-left: auto;
  padding-left: 20px;
}

.price-summary {
  background: linear-gradient(145deg, #1a1a1a, #262626);
  border-radius: 20px;
  padding: 30px;
  border: 1px solid #333;
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.5);
  position: sticky;
  top: 20px;
  height: fit-content;
  width: 400px;
  box-sizing: border-box;
}

.price-summary h3 {
  font-size: 1.5rem;
  margin-bottom: 20px;
  color: #ffff00;
  text-align: center;
}

.price-item {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 12px 0;
  border-bottom: 1px solid #333;
}

.price-item:last-child {
  border-bottom: none;
  margin-top: 15px;
  padding-top: 20px;
  border-top: 2px solid #ffff00;
}

.price-item.total {
  font-size: 1.3rem;
  font-weight: bold;
  color: #ffff00;
}

.estimate-button {
  width: 100%;
  padding: 15px;
  background: linear-gradient(135deg, #ffff00, #ffcc00);
  color: #000;
  border: none;
  border-radius: 10px;
  font-size: 1.1rem;
  font-weight: bold;
  cursor: pointer;
  transition: all 0.3s ease;
  margin-top: 20px;
}

.estimate-button:hover {
  transform: translateY(-2px);
  box-shadow: 0 8px 25px rgba(255, 255, 0, 0.4);
}

.features-section {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  gap: 30px;
  margin-top: 60px;
}

.feature-card {
  background: linear-gradient(145deg, #1a1a1a, #262626);
  border-radius: 15px;
  padding: 25px;
  border: 1px solid #333;
  text-align: center;
  transition: all 0.3s ease;
}

.feature-card:hover {
  transform: translateY(-5px);
  box-shadow: 0 15px 40px rgba(0, 0, 0, 0.3);
}

.feature-icon {
  font-size: 2.5rem;
  margin-bottom: 15px;
  color: #00ffff;
}

.feature-card h4 {
  font-size: 1.2rem;
  margin-bottom: 10px;
  color: #ffffff;
}

.feature-card p {
  color: #cccccc;
  font-size: 0.95rem;
}

.contact-section {
  background: linear-gradient(145deg, #1a1a1a, #262626);
  border-radius: 20px;
  padding: 30px;
  margin-top: 60px;
  text-align: center;
  border: 1px solid #333;
}

.contact-section h3 {
  font-size: 1.8rem;
  margin-bottom: 15px;
  color: #ffff00;
}

.contact-section p {
  color: #cccccc;
  margin-bottom: 25px;
  font-size: 1.1rem;
}

.contact-button {
  padding: 15px 30px;
  background: linear-gradient(135deg, #ff6b35, #ff8c00);
  color: #fff;
  border: none;
  border-radius: 10px;
  font-size: 1.1rem;
  font-weight: bold;
  cursor: pointer;
  transition: all 0.3s ease;
  margin: 0 10px;
}

.contact-button:hover {
  transform: translateY(-2px);
  box-shadow: 0 8px 25px rgba(255, 140, 0, 0.4);
}
/* LaserCutImageProcessor.css に追加してください */

/* 結合モード時のレイヤーアイテムスタイル */
.layer-item.merge-mode {
  cursor: pointer;
  transition: all 0.2s ease;
}

.layer-item.merge-mode:hover {
  transform: scale(1.02);
  box-shadow: 0 2px 8px rgba(0, 255, 255, 0.3);
}

/* 選択されたレイヤーのハイライト */
.layer-item.merge-selected {
  border: 2px solid #00ffff !important;
  box-shadow: 0 0 10px rgba(0, 255, 255, 0.5);
}

/* 結合指示テキストのスタイル */
.merge-instruction {
  font-size: 0.8em;
  color: #fff;
  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.8);
}

/* 結合モードコントロールのスタイル */

/* 無効化されたレイヤー結合ボタンのスタイル */
.merge-color-button:disabled {
  display: none;
}
@media (max-width: 768px) {
  .product-estimate-container {
      grid-template-columns: 1fr;
      gap: 20px;
  }

  .product-container-vertical {
      padding: 20px;
  }

  .spec-item-row {
      padding: 12px 15px;
  }

  .product-header h1 {
      font-size: 2rem;
  }

  .product-form-section, .price-summary {
      padding: 20px;
      max-width: 100%;
      box-sizing: border-box;
  }
}
/* 進捗表示用のCSS - LaserCutImageProcessor.cssに追加 */

.processing-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background: rgba(0, 0, 0, 0.85);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 9999;
  backdrop-filter: blur(8px);
  animation: fadeInOverlay 0.3s ease-out forwards;
}

@keyframes fadeInOverlay {
  from { opacity: 0; }
  to { opacity: 1; }
}

.processing-modal {
  background: linear-gradient(160deg, #1a1a1a, #0d0d0d);
  border-radius: 25px;
  padding: 45px;
  max-width: 550px;
  width: 90%;
  box-shadow: 0 15px 40px rgba(0, 255, 255, 0.2), 0 0 60px rgba(0, 255, 255, 0.1);
  border: 1.5px solid #00ffff;
  text-align: center;
  color: #e0e0e0;
  animation: scaleInModal 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94) forwards;
}

@keyframes scaleInModal {
  from { transform: scale(0.8); opacity: 0; }
  to { transform: scale(1); opacity: 1; }
}

.processing-content h3 {
  color: #ffffff;
  margin-bottom: 35px;
  font-size: 1.8rem;
  font-weight: 700;
  text-shadow: 0 0 8px rgba(0, 255, 255, 0.3);
}

.processing-spinner {
  width: 70px;
  height: 70px;
  border: 5px solid rgba(0, 255, 255, 0.2);
  border-top: 5px solid #00ffff;
  border-radius: 50%;
  animation: spin 1.2s cubic-bezier(0.68, -0.55, 0.27, 1.55) infinite;
  margin: 0 auto 25px;
  box-shadow: 0 0 15px rgba(0, 255, 255, 0.4);
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

.progress-bar-container {
  margin: 25px 0;
}

.progress-bar {
  width: 100%;
  height: 8px;
  background: rgba(255, 255, 255, 0.1);
  border-radius: 4px;
  overflow: hidden;
  position: relative;
  box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.3);
}

.progress-fill {
  height: 100%;
  background: #00ffff;
  border-radius: 4px;
  transition: width 0.3s ease;
  position: relative;
  box-shadow: 0 0 8px rgba(0, 255, 255, 0.4);
}

.progress-fill::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(
    90deg,
    transparent,
    rgba(255, 255, 255, 0.3),
    transparent
  );
  animation: shine 2s infinite ease-in-out;
}

@keyframes shine {
  0% { transform: translateX(-100%); }
  100% { transform: translateX(100%); }
}

.progress-text {
  margin-top: 20px;
  color: #00ffff;
  font-weight: 700;
  font-size: 1.3rem;
  text-shadow: 0 0 6px rgba(0, 255, 255, 0.3);
}

.processing-message {
  margin-top: 20px;
  color: #b0b0b0;
  font-size: 1rem;
  min-height: 25px;
  line-height: 1.4;
}

.processing-tips {
  margin-top: 40px;
  text-align: left;
  background: rgba(0, 0, 0, 0.3);
  padding: 25px;
  border-radius: 12px;
  border: 1.5px solid rgba(255, 255, 255, 0.15);
  opacity: 0;
  animation: fadeInContainer 0.8s ease 0.3s forwards;
}

@keyframes fadeInContainer {
  to {
    opacity: 1;
  }
}

.processing-tips h4 {
  margin: 0 0 20px 0;
  color: #00ffff;
  font-weight: 600;
  font-size: 1.1rem;
  opacity: 0;
  animation: fadeInTitle 0.6s ease forwards;
}

@keyframes fadeInTitle {
  to {
    opacity: 1;
  }
}

.tips-list {
  margin: 0;
  padding: 0;
  list-style: none;
}

.tip-item {
  color: #d0d0d0;
  font-size: 0.9rem;
  line-height: 1.6;
  padding: 8px 0;
  border-bottom: 1px solid rgba(255, 255, 255, 0.08);
  opacity: 0;
  transform: translateY(10px);
  animation: fadeInUp 0.5s ease forwards;
}

.tip-item:nth-child(1) { animation-delay: 0.5s; }
.tip-item:nth-child(2) { animation-delay: 0.7s; }
.tip-item:nth-child(3) { animation-delay: 0.9s; }

.tip-item:last-child {
  border-bottom: none;
}

.tip-item::before {
  content: '•';
  color: #ffffff;
  font-weight: bold;
  margin-right: 12px;
  opacity: 0.7;
  animation: pulse 2s ease-in-out infinite;
}

@keyframes pulse {
  0%, 100% { 
    opacity: 0.7;
    transform: scale(1);
  }
  50% { 
    opacity: 1;
    transform: scale(1.2);
  }
}

@keyframes fadeInUp {
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* 処理ボタンのアニメーション */
.process-button.processing {
  background: linear-gradient(45deg, #00ffff, #0099ff);
  animation: pulseButton 2s infinite ease-in-out;
  cursor: not-allowed;
  box-shadow: 0 0 15px rgba(0, 255, 255, 0.4);
}

@keyframes pulseButton {
  0%, 100% { opacity: 1; }
  50% { opacity: 0.8; }
}
/* LaserCutImageProcessor.cssに追加 */
.svg-generation-progress {
  background: linear-gradient(135deg, #1a1a2e, #16213e);
  border-radius: 15px;
  padding: 20px;
  margin: 15px 0;
  border: 1px solid #00ffff;
  box-shadow: 0 10px 30px rgba(0, 255, 255, 0.2);
}

.progress-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 15px;
}

.progress-header h3 {
  color: #00ffff;
  margin: 0;
  font-size: 1.2rem;
}

.progress-percentage {
  color: #00ffff;
  font-weight: bold;
  font-size: 1.4rem;
}

.progress-details {
  margin-top: 10px;
}

.processing-message {
  color: #ccc;
  font-size: 0.9rem;
  margin-bottom: 5px;
}

.progress-tip {
  color: #888;
  font-size: 0.8rem;
  font-style: italic;
}

.progress-error {
  color: #ff6b6b;
  background: rgba(255, 107, 107, 0.1);
  padding: 10px;
  border-radius: 5px;
  margin-top: 10px;
  border: 1px solid rgba(255, 107, 107, 0.3);
}
/* SVG生成進捗表示用のCSS - ThreeDModelGenerator.cssから移植 */

.processing-overlay-svg {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background: rgba(0, 0, 0, 0.8);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 9999;
  backdrop-filter: blur(8px);
  animation: fadeInOverlay 0.3s ease-out forwards;
}

@keyframes fadeInOverlay {
  from { opacity: 0; }
  to { opacity: 1; }
}

.processing-modal-svg {
  background: linear-gradient(160deg, #1a1a1a, #0d0d0d);
  border-radius: 25px;
  padding: 45px;
  max-width: 550px;
  width: 90%;
  box-shadow: 0 15px 40px rgba(0, 255, 255, 0.2), 0 0 60px rgba(0, 255, 255, 0.1);
  border: 1.5px solid #00ffff;
  text-align: center;
  color: #e0e0e0;
  animation: scaleInModal 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94) forwards;
}

@keyframes scaleInModal {
  from { transform: scale(0.8); opacity: 0; }
  to { transform: scale(1); opacity: 1; }
}

.processing-content-svg h3 {
  color: #ffffff;
  margin-bottom: 35px;
  font-size: 1.8rem;
  font-weight: 700;
  text-shadow: 0 0 8px rgba(0, 255, 255, 0.3);
}

.processing-spinner-svg {
  width: 70px;
  height: 70px;
  border: 5px solid rgba(0, 255, 255, 0.2);
  border-top: 5px solid #00ffff;
  border-radius: 50%;
  animation: spin-svg 1.2s cubic-bezier(0.68, -0.55, 0.27, 1.55) infinite;
  margin: 0 auto 25px;
  box-shadow: 0 0 15px rgba(0, 255, 255, 0.4);
}

@keyframes spin-svg {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

.progress-bar-container-svg {
  margin: 25px 0;
}

.progress-bar-svg {
  width: 100%;
  height: 8px;
  background: rgba(255, 255, 255, 0.1);
  border-radius: 4px;
  overflow: hidden;
  position: relative;
  box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.3);
}

.progress-fill-svg {
  height: 100%;
  background: #00ffff;
  border-radius: 4px;
  transition: width 0.3s ease;
  position: relative;
  box-shadow: 0 0 8px rgba(0, 255, 255, 0.4);
}

.progress-fill-svg::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(
    90deg,
    transparent,
    rgba(255, 255, 255, 0.3),
    transparent
  );
  animation: progressShine 2s infinite ease-in-out;
}

@keyframes progressShine {
  0% { transform: translateX(-100%); }
  100% { transform: translateX(100%); }
}

.progress-text-svg {
  margin-top: 20px;
  color: #00ffff;
  font-weight: 700;
  font-size: 1.3rem;
  text-shadow: 0 0 6px rgba(0, 255, 255, 0.3);
}

.processing-message-svg {
  margin-top: 20px;
  color: #b0b0b0;
  font-size: 1rem;
  min-height: 25px;
  line-height: 1.4;
}

.processing-tips-svg {
  margin-top: 40px;
  text-align: left;
  background: rgba(0, 0, 0, 0.3);
  padding: 25px;
  border-radius: 12px;
  border: 1.5px solid rgba(255, 255, 255, 0.15);
  opacity: 0;
  animation: fadeInContainer 0.8s ease 0.3s forwards;
}

@keyframes fadeInContainer {
  to {
    opacity: 1;
  }
}

.processing-tips-svg h4 {
  margin: 0 0 20px 0;
  color: #00ffff;
  font-weight: 600;
  font-size: 1.1rem;
  opacity: 0;
  animation: fadeInTitle 0.6s ease forwards;
}

@keyframes fadeInTitle {
  to {
    opacity: 1;
  }
}

.tips-list {
  margin: 0;
  padding: 0;
  list-style: none;
}

.tip-item {
  color: #d0d0d0;
  font-size: 0.9rem;
  line-height: 1.6;
  padding: 8px 0;
  border-bottom: 1px solid rgba(255, 255, 255, 0.08);
  opacity: 0;
  transform: translateY(10px);
  animation: fadeInUp 0.5s ease forwards;
}

.tip-item:nth-child(1) { animation-delay: 0.5s; }
.tip-item:nth-child(2) { animation-delay: 0.7s; }
.tip-item:nth-child(3) { animation-delay: 0.9s; }

.tip-item:last-child {
  border-bottom: none;
}

.tip-item::before {
  content: '•';
  color: #ffffff;
  font-weight: bold;
  margin-right: 12px;
  opacity: 0.7;
  animation: pulse 2s ease-in-out infinite;
}

@keyframes pulse {
  0%, 100% { 
    opacity: 0.7;
    transform: scale(1);
  }
  50% { 
    opacity: 1;
    transform: scale(1.2);
  }
}

@keyframes fadeInUp {
  to {
    opacity: 1;
    transform: translateY(0);
  }
}



@keyframes pulse-svg {
  0%, 100% { opacity: 1; }
  50% { opacity: 0.8; }
}

/* ホーム画面下部レイアウト */
.home-bottom-layout {
  display: flex;
  gap: 20px;
  height: 35%;
  align-items: flex-start;
  position: absolute;
  bottom: 0px;
  left: 0px;
  right: 0px;
  z-index: 1;
  overflow: visible;
}

/* ホーム画面でのスクロール無効 */
.main-content.home-content {
  height: 100vh;
  overflow: hidden;
}

.bottom-left-container {
  flex: 1;
  padding: 20px;
  border: 1px solid rgba(255, 255, 255, 0.2);
  border-radius: 10px;
  background: rgba(0, 0, 0, 0.3);
  height: 100%;
  overflow: visible;
  position: relative;
  top: -50px;
}

.bottom-center-container {
  flex: 0 0 20%;
  padding: 20px;
  border-radius: 10px;
  height: 100%;
  overflow: visible;
  text-align: center;
}

.bottom-right-container {
  flex: 1;
  border-radius: 10px;
  height: 100%;
  overflow: visible;
  position: relative;
  top: -50px;
}


.step-message {
  color: #ffffff;
  font-size: clamp(14px, 1.7vw, 35px);
  position: absolute;
  left: 50%;
  bottom: calc(35% + 110px);
  transform: translate(-50%, -50%);
  font-weight: 800;
  line-height: 1.2;
  background: linear-gradient(135deg, #00f5ff, #ff00aa, #ffaa00);
  background-size: 200% 200%;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
  animation: gradientShift 4s ease infinite;
  text-shadow: 0 0 30px rgba(204, 204, 204, 0.5);
  max-width: 60%;
  text-align: center;
  z-index: 10;
}

.order-message {
  color:rgb(243, 243, 243);
  font-size: clamp(12px, 1.5vw, 30px);
  position: absolute;
  left: 50%;
  bottom: 36% ;
  transform: translate(-50%, -50%);
  font-weight: 800;
  line-height: 1.2;
  opacity: 0.9;
  max-width: 60%;
  text-align: center;
  z-index: 10;
}

.order-message .highlight {
  color: #00f5ff;
  font-weight: 600;
  text-shadow: 0 0 10px rgba(0, 245, 255, 0.5);
}

@keyframes gradientShift {
  0%, 100% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
}

.highlight {
  color: #00f5ff;
  font-weight: 600;
  text-shadow: 0 0 10px rgba(0, 245, 255, 0.5);
}
.button-row {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 20px;
  margin-top: 20px;
}


.ch {
  background: #333;
  color: white;
  border: 1px solid #555;
  padding: 10px 20px;
  border-radius: 5px;
  cursor: pointer;
}

.sample-images {
  display: flex;
  justify-content: center;
  align-items: flex-start;
  height: calc(100% - 80px);
  width: 100%;
  padding-top: 
}

.sample-image-placeholder {
  max-width: 100%;
  max-height: 100%;
  width: auto;
  height: auto;
  object-fit: contain;
  border-radius: 8px;
}

.sample-image-placeholder.loading {
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: rgba(0, 0, 0, 0.1);
  min-height: 200px;
}

.loading-spinner {
  width: 30px;
  height: 30px;
  border: 3px solid rgba(255, 255, 255, 0.3);
  border-top: 3px solid #ffff00;
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

.sample-controls {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 10px;
  position: absolute;
  left: 50%;
  bottom: -10px;
  transform: translateX(-50%);
  flex-wrap: nowrap;
  white-space: nowrap;
  min-width: max-content;
}

.sample-switch {
  position: relative;
  width: 60px;
  height: 30px;
  padding: 0;
}

.sample-switch input {
  opacity: 0;
  width: 0;
  height: 0;
}

.sample-slider {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: #ccc;
  transition: .4s;
  border-radius: 30px;
}

.sample-slider:before {
  position: absolute;
  content: "";
  height: 22px;
  width: 22px;
  left: 4px;
  bottom: 4px;
  background-color: white;
  transition: .4s;
  border-radius: 50%;
}

input:checked + .sample-slider {
  background-color: #ffff00;
}

input:checked + .sample-slider:before {
  transform: translateX(30px);
}

/* Home sample switch - exact copy from Costomize.css */
.home-sample-power-switch {
    width: 80px;
    height: 40px;
    border-radius: 20px;
    border: 2px solid;
    color: white;
    font-weight: bold;
    font-size: 16px;
    cursor: pointer;
    transition: all 0.3s ease;
    position: relative;
}

.home-sample-power-switch.on {
    background-color: #10b981;
    border-color: #10b981;
    box-shadow: 0 0 20px rgba(16, 185, 129, 0.5);
}

.home-sample-power-switch.off {
    background-color: #374151;
    border-color: #6b7280;
    box-shadow: 0 0 20px rgba(0, 0, 0, 0);
}

.home-sample-switch-handle {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    width: 30px;
    height: 30px;
    border-radius: 50%;
    background-color: white;
    transition: left 0.3s ease, transform 0.3s ease;
    box-shadow: 0 2px 4px rgba(0,0,0,0.2);
}

.home-sample-switch-handle.on {
    left: 43px;
}

.home-sample-switch-handle.off {
    left: 3px;
}

/* Home sample power status - exact copy from Costomize.css */
.home-sample-power-status {
    display: flex;
    align-items: center;
    gap: 5px;
}

.home-sample-status-text {
    font-weight: bold;
    line-height: 1.8;
    display: inline-flex;
    align-items: center;
    vertical-align: middle;
    padding: 2px 0;
    overflow: visible;
    width: 30px;
    justify-content: flex-start;
}

.home-sample-status-text.on {
    color: #10b981;
}

.home-sample-status-text.off {
    color: #6b7280;
}

.home-sample-status-dot {
    display: inline-block;
    width: 16px;
    height: 16px;
    border-radius: 50%;
    margin-right: 8px;
    vertical-align: middle;
}

.home-sample-status-dot.on {
    background-color: #10b981;
    box-shadow: 0 0 8px rgba(16, 185, 129, 0.6);
}

.home-sample-status-dot.off {
    background-color: #374151;
}

.sample-switch-text {
  color: white;
  font-size: 18px;
  
}

/* ホーム画面のガイドボタン */
.bottom-center-container .info-button {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 35px;
  height: 35px;
  border: 2px solid #ddd;
  border-radius: 25px;
  cursor: pointer;
  position: absolute;
  left: calc(50% - 170px);
  bottom: 27%;
  font-size: 25px;
  background: white;
  color: #333;
  box-shadow: 0 4px 15px rgba(0,0,0,0.1);
  animation: lightning-flash 1.5s infinite;
  overflow: visible;
  transition: all 0.3s ease;
}

.bottom-center-container .bottom-explanation{
  position:absolute;
  left: calc(50% - 270px);
  font-size:12px;
  bottom:calc(27% - 30px);  
  width:200px;
  color: #ffffff;
  text-align: center;
}

.bottom-center-container .info-button:hover {
  box-shadow: 0 6px 20px rgba(0,0,0,0.15);
}

.bottom-center-container .info-button::before {
  content: 'i';
  font-weight: bold;
  font-style: italic;
  font-family: 'Times New Roman', serif;
  color: #333;
  animation: lightning-flicker 1.5s infinite;
}

.bottom-center-container .info-button::after {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 100%;
  height: 100%;
  border: 2px solid rgba(255,255,255,0.5);
  border-radius: 50%;
  transform: translate(-50%, -50%) scale(0);
  animation: ripple-wave 1.5s infinite;
}

.bottom-center-container .info-button.stopped {
  animation: none;
}

.bottom-center-container .info-button.stopped::before {
  animation: none;
  text-shadow: 0 0 5px rgba(255,255,255,0.5);
  color: #333;
}

.bottom-center-container .info-button.stopped::after {
  animation: none;
  opacity: 0;
}
